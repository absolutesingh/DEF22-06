package linkedList;

class Node
{
	int data;
	Node next;
	Node(int data)
	{
		this.data = data;
		this.next = null;
	}
}

public class MyLL {
	
	static void print(Node head)//Copy of reference passed
	{
		if(head == null)
		{
			System.out.println("Empty LL: Nothing to print.");
			return;
		}
		
		while(head!=null)//fine to use head over here as it is copy of reference
			//Original head is preserved in Main
		{
			System.out.print(head.data + " ");
			head = head.next;
		}
		System.out.println();
	}
	
	static Node insertAtHead(Node head, int data)
	{
		Node newNode = new Node(data);
		newNode.next = head;
		return newNode;
//		head = newNode;
//		return head;
	}
	
	static void insertAtEnd(Node head, int data)
	{
		Node newNode = new Node(data);
		Node last = head;
		while(last.next!=null)
		{
			last = last.next;
		}
		//last element found
		last.next = newNode;
		
	}

	public static void main(String[] args) {
		Node head = new Node(5);
//		System.out.println(head.data);
//		System.out.println(head.next);
		Node second = new Node(6);
		head.next = second;
		Node third = new Node(7);
		second.next = third;
		Node fourth = new Node(8);
		third.next = fourth;
		Node fifth = new Node(9);
		fourth.next = fifth;
		
//		System.out.println(head.data);
//		System.out.println(head.next.data);
//		System.out.println(head.next.next.data);
//		System.out.println(head.next.next.next.data);
//		System.out.println(head.next.next.next.next.data);
		
//		while(head!=null)
//		{
//			System.out.println(head.data);
//			head = head.next;
//		}
//		head has become null -> NEVER LOOSE YOUR HEAD
		
		Node temp = head;
		while(temp!=null)
		{
			System.out.println(temp.data);
			temp = temp.next;
		}
		
		print(head);
		print(null);
		
		head = insertAtHead(head, 4);
		print(head);
		
		insertAtEnd(head, 10);
		print(head);
		
		
	}

}
